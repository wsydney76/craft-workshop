# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"This is the interface implemented by all assets."
interface AssetInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

"This is the interface implemented by all elements."
interface ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all entries."
interface EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

"This is the interface implemented by all global sets."
interface GlobalSetInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The handle of the global set."
    handle: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The name of the global set."
    name: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all matrix blocks."
interface MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

"This is the interface implemented by all products."
interface ProductInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "If the product is available for purchase."
    availableForPurchase: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The price of the default variant for the product."
    defaultPrice: Float
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The handle of the product type that contains the product."
    productTypeHandle: String
    "The ID of the product type that contains the product."
    productTypeId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The product’s variants."
    variants: [VariantInterface]
}

"This is the interface implemented by all users."
interface UserInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The user's email."
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The user's first name."
    firstName: String
    "The user's first name or username."
    friendlyName: String
    "The user's full name."
    fullName: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The user's last name."
    lastName: String
    "The user's full name or username."
    name: String
    "The user's photo."
    photo: AssetInterface
    "The user’s preferences."
    preferences: String
    "The user’s preferred language."
    preferredLanguage: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The username."
    username: String
}

"This is the interface implemented by all variants."
interface VariantInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "If the variant has unlimited stock."
    hasUnlimitedStock: Boolean
    "The height of the variant."
    height: Float
    "The id of the entity"
    id: ID
    "If the variant is available to be purchased."
    isAvailable: Boolean
    "If the variant is the default for the product."
    isDefault: Boolean
    "The language of the site element is associated with."
    language: String
    "The length of the variant."
    length: Float
    "The maximum allowed quantity to be purchased."
    maxQty: Int
    "The minimum allowed quantity to be purchased."
    minQty: Int
    "The price of the variant."
    price: Float
    "The variant’s parent product."
    product: ProductInterface
    "The ID of the variant’s parent product."
    productId: Int
    "The title of the variant’s parent product."
    productTitle: String
    "The product type ID of the variant’s parent product."
    productTypeId: Int
    "The sale price of the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    salePrice: Float
    "The sales that apply to the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    sales: [Sale]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The SKU of the variant."
    sku: String
    "The element’s slug."
    slug: String
    "The sort order of the variant."
    sortOrder: Int
    "The element's status."
    status: String
    "The stock level of the variant."
    stock: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The weight of the variant."
    weight: Float
    "The width of the variant."
    width: Float
}

union bodyContent_MatrixField = bodyContent_button_BlockType | bodyContent_embed_BlockType | bodyContent_heading_BlockType | bodyContent_image_BlockType | bodyContent_linkedText_BlockType | bodyContent_pullquote_BlockType | bodyContent_text_BlockType

union cast_MatrixField = cast_role_BlockType

union contentBuilder_MatrixField = contentBuilder_textImage_BlockType

union crew_MatrixField = crew_role_BlockType

union globalseofields_MatrixField = globalseofields_settings_BlockType

union guideContent_MatrixField = guideContent_grid_BlockType | guideContent_heading_BlockType | guideContent_image_BlockType | guideContent_matrixhelp_BlockType | guideContent_text_BlockType

union links_MatrixField = links_externalLink_BlockType

union seoFields_MatrixField = seoFields_settings_BlockType

union socialMediaLinks_MatrixField = socialMediaLinks_socialMediaLink_BlockType

union trivia_MatrixField = trivia_trivia_BlockType

type Element implements ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type Mutation {
    ping: String
}

type Query {
    "This query is used to query for a single asset."
    asset(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "This query is used to return the number of assets."
    assetCount(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): Int!
    "This query is used to query for assets."
    assets(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "This query is used to query for entries."
    entries(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "This query is used to query for a single entry."
    entry(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "This query is used to return the number of entries."
    entryCount(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): Int!
    "This query is used to query for a single global set."
    globalSet(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        body: [QueryArgument],
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        defaultFeaturedImage: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the global sets’ handles."
        handle: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        notFoundImage: [QueryArgument],
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        privacyPage: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        siteIcon: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        siteName: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        suggestionUserForEmail: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): GlobalSetInterface
    "This query is used to query for global sets."
    globalSets(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        body: [QueryArgument],
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        defaultFeaturedImage: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the global sets’ handles."
        handle: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        notFoundImage: [QueryArgument],
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        privacyPage: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        siteIcon: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        siteName: [QueryArgument],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        suggestionUserForEmail: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [GlobalSetInterface]
    ping: String
    "This query is used to query for a product."
    product(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Whether to only return products that are available to purchase."
        availableForPurchase: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the default price on the product."
        defaultPrice: [QueryArgument],
        deliveryPeriod: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return products that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        features: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only products that have certain variants."
        hasVariant: VariantInput,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        languages: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        productFeaturedImage: [QueryArgument],
        productGallery: [QueryArgument],
        productPhoto: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        relatedProducts: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        teaser: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the product type the products belong to per the product type’s handles."
        type: [String],
        "Narrows the query results based on the product types the products belong to, per the product type IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): ProductInterface
    "This query is used to query for products."
    products(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Whether to only return products that are available to purchase."
        availableForPurchase: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the default price on the product."
        defaultPrice: [QueryArgument],
        deliveryPeriod: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return products that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        features: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only products that have certain variants."
        hasVariant: VariantInput,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        languages: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        productFeaturedImage: [QueryArgument],
        productGallery: [QueryArgument],
        productPhoto: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        relatedProducts: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        teaser: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the product type the products belong to per the product type’s handles."
        type: [String],
        "Narrows the query results based on the product types the products belong to, per the product type IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [ProductInterface]
    "List of user supplied Suggestions"
    suggestions(
        "Email of suggesitons"
        email: String,
        "ID of a suggestion"
        id: [QueryArgument],
        "Related entry of suggestions"
        relatedEntryId: Int,
        "Search term"
        search: String,
        "Status of suggestions"
        status: String,
        "Assigned user of suggestions"
        userId: Int
    ): [Suggestion]
    "This query is used to query for a single user."
    user(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): UserInterface
    "This query is used to return the number of users."
    userCount(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): Int!
    "This query is used to query for users."
    users(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): [UserInterface]
    "This query is used to query for a variant."
    variant(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the variant has sales applied."
        hasSales: Boolean,
        "Narrows the query results based on whether the variant has stock available."
        hasStock: Boolean,
        "Narrows the query results based on the variant’s height dimension."
        height: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the variants default status."
        isDefault: Boolean,
        "Narrows the query results based on the variant’s length dimension."
        length: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the variant’s maximum allowed quantity to be purchased."
        maxQty: [QueryArgument],
        "Narrows the query results based on the variant’s minimum allowed quantity to be purchased."
        minQty: [QueryArgument],
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on variant price."
        price: [QueryArgument],
        "Narrows the query results based on the variant’s product ID."
        productId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the variant SKU."
        sku: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on variant stock level."
        stock: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the variant’s product’s type ID."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the variant’s weight dimension."
        weight: [QueryArgument],
        "Narrows the query results based on the variant’s width dimension."
        width: [QueryArgument]
    ): VariantInterface
    "This query is used to query for variants."
    variants(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on whether the variant has sales applied."
        hasSales: Boolean,
        "Narrows the query results based on whether the variant has stock available."
        hasStock: Boolean,
        "Narrows the query results based on the variant’s height dimension."
        height: [QueryArgument],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the variants default status."
        isDefault: Boolean,
        "Narrows the query results based on the variant’s length dimension."
        length: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Narrows the query results based on the variant’s maximum allowed quantity to be purchased."
        maxQty: [QueryArgument],
        "Narrows the query results based on the variant’s minimum allowed quantity to be purchased."
        minQty: [QueryArgument],
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on variant price."
        price: [QueryArgument],
        "Narrows the query results based on the variant’s product ID."
        productId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the variant SKU."
        sku: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on variant stock level."
        stock: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the variant’s product’s type ID."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the variant’s weight dimension."
        weight: [QueryArgument],
        "Narrows the query results based on the variant’s width dimension."
        width: [QueryArgument]
    ): [VariantInterface]
}

"Role Details"
type Roles {
    "The film the role occured in"
    film: EntryInterface
    "Id of matrixblock"
    id: Int
    "Role Name"
    roleName: String
}

type Sale {
    "How the sale should be applied."
    apply: String
    "The amount applied used by the apply option."
    applyAmount: Float
    "The amount applied used by the apply option."
    applyAmountAsFlat: Float
    "The amount applied used by the apply option."
    applyAmountAsPercent: String
    "Start date of the sale."
    dateFrom: DateTime
    "Start date of the sale."
    dateTo: DateTime
    "Description of the sale."
    description: String
    "The name of the sale as described in the control panel."
    name: String
}

"Suggestion Record"
type Suggestion {
    "Creation date of the suggestion"
    dateCreated: DateTime
    "Description of the suggestion"
    description: String
    "Email of the suggestion"
    email: String
    "Related Entry"
    entry: EntryInterface
    "History"
    history: [SuggestionHistory]
    "ID"
    id: Int
    "Name of contributor"
    name: String
    "Notes of the suggestion"
    notes: String
    "Status of the suggestion"
    status: String
    "Title of the suggestion"
    title: String
    "Assigned User"
    user: UserInterface
}

"Suggestion History Record"
type SuggestionHistory {
    "Creator of history record"
    creator: UserInterface
    "Creation date of the suggestion"
    dateCreated: DateTime
    "Related Entry"
    entry: EntryInterface
    "ID"
    id: Int
    "Notes of the suggestion"
    notes: String
    "Status of the suggestion"
    status: String
    "Assigned User"
    user: UserInterface
}

type User implements ElementInterface & UserInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    bio: String
    bioDe: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The user's email."
    email: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The user's first name."
    firstName: String
    "The user's first name or username."
    friendlyName: String
    "The user's full name."
    fullName: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The user's last name."
    lastName: String
    "The user's full name or username."
    name: String
    "The user's photo."
    photo: AssetInterface
    "The user’s preferences."
    preferences: String
    "The user’s preferred language."
    preferredLanguage: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The username."
    username: String
    watchList(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
}

type additionalCast_TableRow {
    col1: String
    name: String
}

type awardIndex_awardIndex_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type award_award_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    film(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    person(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type bodyContent_button_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    caption: String
    color(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    target(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type bodyContent_embed_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    asset(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    description: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    heading: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type bodyContent_heading_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    tag(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    text: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type bodyContent_image_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    caption: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The language of the site element is associated with."
    language: String
    options(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): [String]
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type bodyContent_linkedText_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    target(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    textAfter: String
    textBefore: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type bodyContent_pullquote_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    text: String
    textSource: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type bodyContent_text_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    highlightBlock: Boolean
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    text: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type book_Product implements ElementInterface & ProductInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "If the product is available for purchase."
    availableForPurchase: Boolean
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The price of the default variant for the product."
    defaultPrice: Float
    deliveryPeriod: Number
    "Whether the element is enabled or not."
    enabled: Boolean
    features: [features_TableRow]
    "The id of the entity"
    id: ID
    isFeaturedOnHomePage: Boolean
    "The language of the site element is associated with."
    language: String
    languages(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    productFeaturedImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    productGallery(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    productPhoto(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The handle of the product type that contains the product."
    productTypeHandle: String
    "The ID of the product type that contains the product."
    productTypeId: Int
    relatedEntries(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    relatedProducts(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Whether to only return products that are available to purchase."
        availableForPurchase: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the default price on the product."
        defaultPrice: [QueryArgument],
        deliveryPeriod: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return products that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        features: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only products that have certain variants."
        hasVariant: VariantInput,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        languages: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        productFeaturedImage: [QueryArgument],
        productGallery: [QueryArgument],
        productPhoto: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        relatedProducts: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        teaser: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the product type the products belong to per the product type’s handles."
        type: [String],
        "Narrows the query results based on the product types the products belong to, per the product type IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [ProductInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The product’s variants."
    variants: [VariantInterface]
}

type book_Variant implements ElementInterface & VariantInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "If the variant has unlimited stock."
    hasUnlimitedStock: Boolean
    "The height of the variant."
    height: Float
    "The id of the entity"
    id: ID
    "If the variant is available to be purchased."
    isAvailable: Boolean
    "If the variant is the default for the product."
    isDefault: Boolean
    "The language of the site element is associated with."
    language: String
    "The length of the variant."
    length: Float
    "The maximum allowed quantity to be purchased."
    maxQty: Int
    "The minimum allowed quantity to be purchased."
    minQty: Int
    "The price of the variant."
    price: Float
    "The variant’s parent product."
    product: ProductInterface
    "The ID of the variant’s parent product."
    productId: Int
    "The title of the variant’s parent product."
    productTitle: String
    "The product type ID of the variant’s parent product."
    productTypeId: Int
    "The sale price of the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    salePrice: Float
    "The sales that apply to the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    sales: [Sale]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The SKU of the variant."
    sku: String
    "The element’s slug."
    slug: String
    "The sort order of the variant."
    sortOrder: Int
    "The element's status."
    status: String
    "The stock level of the variant."
    stock: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The weight of the variant."
    weight: Float
    "The width of the variant."
    width: Float
}

type cast_role_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    persons(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    roleName: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type clothing_Product implements ElementInterface & ProductInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "If the product is available for purchase."
    availableForPurchase: Boolean
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The price of the default variant for the product."
    defaultPrice: Float
    deliveryPeriod: Number
    "Whether the element is enabled or not."
    enabled: Boolean
    features: [features_TableRow]
    "The id of the entity"
    id: ID
    isFeaturedOnHomePage: Boolean
    "The language of the site element is associated with."
    language: String
    productFeaturedImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    productGallery(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    productPhoto(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The handle of the product type that contains the product."
    productTypeHandle: String
    "The ID of the product type that contains the product."
    productTypeId: Int
    relatedEntries(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    relatedProducts(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Whether to only return products that are available to purchase."
        availableForPurchase: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results based on the default price on the product."
        defaultPrice: [QueryArgument],
        deliveryPeriod: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return products that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        features: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results to only products that have certain variants."
        hasVariant: VariantInput,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        languages: [QueryArgument],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        productFeaturedImage: [QueryArgument],
        productGallery: [QueryArgument],
        productPhoto: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        relatedProducts: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        teaser: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the product type the products belong to per the product type’s handles."
        type: [String],
        "Narrows the query results based on the product types the products belong to, per the product type IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [ProductInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The product’s variants."
    variants: [VariantInterface]
}

type clothing_Variant implements ElementInterface & VariantInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "If the variant has unlimited stock."
    hasUnlimitedStock: Boolean
    "The height of the variant."
    height: Float
    "The id of the entity"
    id: ID
    "If the variant is available to be purchased."
    isAvailable: Boolean
    "If the variant is the default for the product."
    isDefault: Boolean
    "The language of the site element is associated with."
    language: String
    "The length of the variant."
    length: Float
    "The maximum allowed quantity to be purchased."
    maxQty: Int
    "The minimum allowed quantity to be purchased."
    minQty: Int
    "The price of the variant."
    price: Float
    "The variant’s parent product."
    product: ProductInterface
    "The ID of the variant’s parent product."
    productId: Int
    "The title of the variant’s parent product."
    productTitle: String
    "The product type ID of the variant’s parent product."
    productTypeId: Int
    "The sale price of the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    salePrice: Float
    "The sales that apply to the variant. CAUTION: This will not take into account sales that utilize user group conditions."
    sales: [Sale]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The SKU of the variant."
    sku: String
    "The element’s slug."
    slug: String
    "The sort order of the variant."
    sortOrder: Int
    "The element's status."
    status: String
    "The stock level of the variant."
    stock: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The weight of the variant."
    weight: Float
    "The width of the variant."
    width: Float
}

type contentBuilder_textImage_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    backgroundImageData: String
    buttonCaption: String
    buttonTarget(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    heading: String
    "The id of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    reusableBackgroundColor(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    text: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type country_country_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type crew_role_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    departments(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    names: [names_TableRow]
    "The ID of the element that owns the matrix block."
    ownerId: Int
    persons(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type department_department_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    jsonLdProperty: String
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type embeds_Asset implements AssetInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

type eventsectionIndex_eventsectionIndex_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type eventsection_eventsection_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type features_TableRow {
    col1: String
    feature: String
}

type filmIndex_filmIndex_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type film_film_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    additionalCast: [additionalCast_TableRow]
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    cast(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [cast_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    crew(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [crew_MatrixField]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    eventSection(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    folderName: String
    gallery(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    genre(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    isFeaturedOnHomePage: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    links(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [links_MatrixField]
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    originalLanguage(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    originalTitle: String
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    photo(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    producedIn(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    relatedEntries(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    releaseYear: Number
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoFields(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [seoFields_MatrixField]
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    trivia(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [trivia_MatrixField]
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type gdprInfo_GlobalSet implements ElementInterface & GlobalSetInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    body: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The handle of the global set."
    handle: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The name of the global set."
    name: String
    privacyPage(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type genre_genre_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type globalSeo_GlobalSet implements ElementInterface & GlobalSetInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    globalseofields(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [globalseofields_MatrixField]
    "The handle of the global set."
    handle: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The name of the global set."
    name: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type globalseofields_settings_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    description: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type guideContent_grid_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    heading: String
    "The id of the entity"
    id: ID
    images(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    imgWidth(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The language of the site element is associated with."
    language: String
    orientation(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    text: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type guideContent_heading_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    tag(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    text: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type guideContent_image_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type guideContent_matrixhelp_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    includeMatrixhelp: Boolean
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type guideContent_text_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    text: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type guide_Asset implements AssetInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

type guide_guide_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    guideContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [guideContent_MatrixField]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    showInDashboard: Boolean
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    templateLocation(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type homeFeaturedSection_homeFeaturedSection_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featured(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type home_home_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type images_Asset implements AssetInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    copyright: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

type language_language_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    languageCode: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type links_externalLink_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    href: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    text: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type locationIndex_locationIndex_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type location_location_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    address: String
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type names_TableRow {
    col1: String
    name: String
}

type newsIndex_newsIndex_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type news_link_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    externalLink: String
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    folderName: String
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type news_news_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featured(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    folderName: String
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    relatedEntries(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoFields(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [seoFields_MatrixField]
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    topics(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type page_contentBuilder_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    additionalTemplate: String
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    contentBuilder(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [contentBuilder_MatrixField]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    folderName: String
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type page_page_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    additionalTemplate: String
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    showInNav(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type personIndex_personIndex_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type person_person_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bio: String
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    born: DateTime
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    died: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    firstName: String
    folderName: String
    gallery(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    isFeaturedOnHomePage: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    lastName: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    links(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [links_MatrixField]
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    photo(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    relatedEntries(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s right position within its structure."
    rgt: Int
    "Roles a person played"
    roles(
        "Sort criteria"
        orderBy: String
    ): [Roles]
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    seoFields(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [seoFields_MatrixField]
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type reusableBackgroundColor_reusableBackgroundColor_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    reusableColor: String
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type screeningIndex_screeningIndex_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type screening_screening_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    film(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The id of the entity"
    id: ID
    importId: Number
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    location(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    screeningLanguage(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    showtime: DateTime
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    soldOut: Boolean
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    subtitlesLanguages(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type search_search_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type seoFields_settings_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    alternativeTitle: String
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    description: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    image(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    robots(
        "If set to true, will return label instead of the value"
        label: Boolean
    ): String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type shop_Asset implements AssetInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

type shop_shop_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type siteInfo_GlobalSet implements ElementInterface & GlobalSetInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    copyright: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    defaultFeaturedImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "Whether the element is enabled or not."
    enabled: Boolean
    "The handle of the global set."
    handle: String
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The name of the global set."
    name: String
    notFoundImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    siteIcon(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The ID of the site the element is associated with."
    siteId: Int
    siteName: String
    "The element’s slug."
    slug: String
    socialMediaLinks(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [socialMediaLinks_MatrixField]
    "The element's status."
    status: String
    suggestionUserForEmail(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): [UserInterface]
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type sitemap_sitemap_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type socialMediaLinks_socialMediaLink_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    caption: String
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    icon(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    profileLink: String
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type suggestion_suggestion_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type temporaryUploads_Asset implements AssetInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

type topicIndex_topicIndex_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type topic_topic_Entry implements ElementInterface & EntryInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The entry's author."
    author: UserInterface
    "The ID of the author of this entry."
    authorId: Int
    bodyContent(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the field the Matrix blocks belong to, per the fields’ IDs."
        fieldId: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        " Narrows the query results based on the owner element of the Matrix blocks, per the owners’ IDs."
        ownerId: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the Matrix blocks’ block type handles."
        type: [String],
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String]
    ): [bodyContent_MatrixField]
    "The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query."
    children(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The name of the draft."
    draftName: String
    "The notes for the draft."
    draftNotes: String
    "Whether the element is enabled or not."
    enabled: Boolean
    "The expiry date of the entry."
    expiryDate: DateTime
    featuredImage(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): [AssetInterface]
    "The id of the entity"
    id: ID
    "Returns whether this is a draft."
    isDraft: Boolean
    "Returns whether this is a revision."
    isRevision: Boolean
    "Returns whether this is a draft."
    isUnsavedDraft: Boolean
    "The language of the site element is associated with."
    language: String
    "The element’s level within its structure"
    level: Int
    "The element’s left position within its structure."
    lft: Int
    "The same element in other locales."
    localized(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): [EntryInterface]
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The entry’s parent, if the section is a structure."
    parent: EntryInterface
    "The entry's post date."
    postDate: DateTime
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        additionalCast: [QueryArgument],
        additionalTemplate: [QueryArgument],
        address: [QueryArgument],
        "Narrows the query results to only entries that were posted on or after a certain date."
        after: String,
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `ancestorOf`."
        ancestorDist: Int,
        "Narrows the query results to only elements that are ancestors of another element."
        ancestorOf: Int,
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        "Narrows the query results based on the user group the entries’ authors belong to."
        authorGroup: [String],
        "Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs."
        authorGroupId: [QueryArgument],
        "Narrows the query results based on the entries’ authors."
        authorId: [QueryArgument],
        "Narrows the query results to only entries that were posted before a certain date."
        before: String,
        bio: [QueryArgument],
        born: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "Narrows the query results to only elements that are up to a certain distance away from the element specified by `descendantOf`."
        descendantDist: Int,
        "Narrows the query results to only elements that are descendants of another element."
        descendantOf: Int,
        died: [QueryArgument],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Whether to only return entries that the user has permission to edit."
        editable: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        eventSection: [QueryArgument],
        "Narrows the query results based on the entries’ expiry dates."
        expiryDate: [String],
        externalLink: [QueryArgument],
        featured: [QueryArgument],
        featuredImage: [QueryArgument],
        film: [QueryArgument],
        firstName: [QueryArgument],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        folderName: [QueryArgument],
        gallery: [QueryArgument],
        genre: [QueryArgument],
        "Narrows the query results based on whether the elements have any descendants."
        hasDescendants: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        importId: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        isFeaturedOnHomePage: Boolean,
        jsonLdProperty: [QueryArgument],
        languageCode: [QueryArgument],
        lastName: [QueryArgument],
        "Narrows the query results based on whether the elements are “leaves” (element with no descendants)."
        leaves: Boolean,
        "Narrows the query results based on the elements’ level within the structure."
        level: Int,
        "Sets the limit for paginated results."
        limit: Int,
        location: [QueryArgument],
        "Narrows the query results to only the entry that comes immediately after another element."
        nextSiblingOf: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        originalLanguage: [QueryArgument],
        originalTitle: [QueryArgument],
        person: [QueryArgument],
        photo: [QueryArgument],
        "Narrows the query results to only entries that are positioned after another element."
        positionedAfter: Int,
        "Narrows the query results to only entries that are positioned before another element."
        positionedBefore: Int,
        "Narrows the query results based on the entries’ post dates."
        postDate: [String],
        "Narrows the query results to only the entry that comes immediately before another element."
        prevSiblingOf: Int,
        producedIn: [QueryArgument],
        "Narrows the query results based on a reference string."
        ref: [String],
        relatedEntries: [QueryArgument],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        releaseYear: [QueryArgument],
        reusableColor: [QueryArgument],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        screeningLanguage: [QueryArgument],
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Narrows the query results based on the section handles the entries belong to."
        section: [String],
        "Narrows the query results based on the sections the entries belong to, per the sections’ IDs."
        sectionId: [QueryArgument],
        showInDashboard: Boolean,
        showInNav: [QueryArgument],
        showtime: [QueryArgument],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        soldOut: Boolean,
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Determines which structure data should be joined into the query."
        structureId: Int,
        subtitlesLanguages: [QueryArgument],
        teaser: [QueryArgument],
        templateLocation: [QueryArgument],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        topics: [QueryArgument],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the entries’ entry type handles."
        type: [String],
        "Narrows the query results based on the entries’ entry types, per the types’ IDs."
        typeId: [QueryArgument],
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Explicitly determines whether the query should join in the structure data."
        withStructure: Boolean
    ): EntryInterface
    "The element’s right position within its structure."
    rgt: Int
    "The element’s structure’s root ID"
    root: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The handle of the section that contains the entry."
    sectionHandle: String
    "The ID of the section that contains the entry."
    sectionId: Int
    shortDescription: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "Returns the element’s ID, or if it’s a draft/revision, its source element’s ID."
    sourceId: Int
    "Returns the element’s UUID, or if it’s a draft/revision, its source element’s UUID."
    sourceUid: String
    "The element's status."
    status: String
    "The element’s structure ID."
    structureId: Int
    teaser: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the entry type that contains the entry."
    typeHandle: String
    "The ID of the entry type that contains the entry."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
    "The element’s full URL"
    url: String
}

type trivia_trivia_BlockType implements ElementInterface & MatrixBlockInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The ID of the field that owns the matrix block."
    fieldId: Int
    "The id of the entity"
    id: ID
    "The language of the site element is associated with."
    language: String
    "The ID of the element that owns the matrix block."
    ownerId: Int
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The element’s slug."
    slug: String
    "The sort order of the matrix block within the owner element field."
    sortOrder: Int
    "The element's status."
    status: String
    text: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The handle of the matrix block's type."
    typeHandle: String
    "The ID of the matrix block's type."
    typeId: Int
    "The uid of the entity"
    uid: String
    "The element’s URI."
    uri: String
}

type userPhotos_Asset implements AssetInterface & ElementInterface {
    "Return a number of related elements for a field."
    _count(
        "The handle of the field that holds the relations."
        field: String!
    ): Int
    "Whether the element is archived or not."
    archived: Boolean
    "The date the element was created."
    dateCreated: DateTime
    "The date the asset file was last modified."
    dateModified: DateTime
    "The date the element was last updated."
    dateUpdated: DateTime
    "Whether the element is enabled or not."
    enabled: Boolean
    "The file extension for the asset file."
    extension: String
    "The filename of the asset file."
    filename: String
    "The focal point represented as an array with `x` and `y` keys, or null if it's not an image."
    focalPoint: [Float]
    "The ID of the folder that the asset belongs to."
    folderId: Int
    "Whether a user-defined focal point is set on the asset."
    hasFocalPoint: Boolean
    "The height in pixels or null if it's not an image."
    height(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
    "The id of the entity"
    id: ID
    "An `<img>` tag based on this asset."
    img: String
    "The file kind."
    kind: String
    "The language of the site element is associated with."
    language: String
    "The file’s MIME type, if it can be determined."
    mimeType: String
    "Returns the next element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    next(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The asset's path in the volume."
    path: String
    "Returns the previous element relative to this one, from a given set of criteria. CAUTION: Applying arguments to this field severely degrades the performance of the query."
    prev(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        copyright: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the assets’ files’ last-modified dates."
        dateModified: String,
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the assets’ filenames."
        filename: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the folders the assets belong to, per the folders’ IDs."
        folderId: [QueryArgument],
        "Narrows the query results based on the assets’ image heights."
        height: [String],
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`."
        includeSubfolders: Boolean,
        "Narrows the query results based on the assets’ file kinds."
        kind: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the assets’ file sizes (in bytes)."
        size: [String],
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the user the assets were uploaded by, per the user’s ID."
        uploader: QueryArgument,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ handles."
        volume: [String],
        "Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs."
        volumeId: [QueryArgument],
        "Narrows the query results based on the assets’ image widths."
        width: [String],
        "A list of transform handles to preload."
        withTransforms: [String]
    ): AssetInterface
    "The element’s search score, if the `search` parameter was used when querying for the element."
    searchScore: String
    "The ID of the site the element is associated with."
    siteId: Int
    "The file size in bytes."
    size: String
    "The element’s slug."
    slug: String
    "The element's status."
    status: String
    "The element’s title."
    title: String
    "Whether the element has been soft-deleted or not."
    trashed: Boolean
    "The uid of the entity"
    uid: String
    "The user who first added this asset (if known)."
    uploader(
        "Narrows the query results to only elements that have been archived."
        archived: Boolean,
        bio: [QueryArgument],
        bioDe: [QueryArgument],
        "Narrows the query results based on the elements’ creation dates."
        dateCreated: [String],
        "Narrows the query results based on the elements’ last-updated dates."
        dateUpdated: [String],
        "The drafts’ creator ID"
        draftCreator: Int,
        "The ID of the draft to return (from the `drafts` table)"
        draftId: Int,
        "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
        draftOf: QueryArgument,
        "Whether draft elements should be returned."
        drafts: Boolean,
        "Narrows the query results based on the users’ email addresses."
        email: [String],
        "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
        enabledForSite: Boolean,
        "Narrows the query results based on the users’ first names."
        firstName: [String],
        "Causes the query results to be returned in the order specified by the `id` argument."
        fixedOrder: Boolean,
        "Narrows the query results based on the user group the users belong to."
        group: [QueryArgument],
        "Narrows the query results based on the user group the users belong to, per the groups’ IDs."
        groupId: [QueryArgument],
        "Narrows the query results to only users that have (or don’t have) a user photo."
        hasPhoto: Boolean,
        "Narrows the query results based on the elements’ IDs."
        id: [QueryArgument],
        "Causes the query results to be returned in reverse order."
        inReverse: Boolean,
        "Narrows the query results based on the users’ last names."
        lastName: [String],
        "Sets the limit for paginated results."
        limit: Int,
        "Sets the offset for paginated results."
        offset: Int,
        "Sets the field the returned elements should be ordered by"
        orderBy: String,
        "Narrows the query results based on a reference string."
        ref: [String],
        "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
        relatedTo: [Int],
        "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
        relatedToAll: [Int],
        "The revisions’ creator ID"
        revisionCreator: Int,
        "The ID of the revision to return (from the `revisions` table)"
        revisionId: Int,
        "The source element ID that revisions should be returned for"
        revisionOf: QueryArgument,
        "Whether revision elements should be returned."
        revisions: Boolean,
        "Narrows the query results to only elements that match a search query."
        search: String,
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        site: [String],
        "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
        siteId: String,
        "Narrows the query results based on the elements’ slugs."
        slug: [String],
        "Narrows the query results based on the elements’ statuses."
        status: [String],
        "Narrows the query results based on the elements’ titles."
        title: [String],
        "Narrows the query results to only elements that have been soft-deleted."
        trashed: Boolean,
        "Narrows the query results based on the elements’ UIDs."
        uid: [String],
        "Determines whether only elements with unique IDs should be returned by the query."
        unique: Boolean,
        "Narrows the query results based on the elements’ URIs."
        uri: [String],
        "Narrows the query results based on the users’ usernames."
        username: [String],
        watchList: [QueryArgument]
    ): UserInterface
    "The ID of the user who first added this asset (if known)."
    uploaderId: Int
    "The element’s URI."
    uri: String
    "The full URL of the asset. This field accepts the same fields as the `transform` directive."
    url(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): String
    "The ID of the volume that the asset belongs to."
    volumeId: Int
    "The width in pixels or null if it's not an image."
    width(
        "The format to use for the transform"
        format: String,
        "The handle of the named transform to use."
        handle: String,
        "Height for the generated transform"
        height: Int,
        "Whether the transform should be generated immediately or only when the image is requested used the generated URL"
        immediately: Boolean,
        "The interlace mode to use for the transform"
        interlace: String,
        "The mode to use for the generated transform."
        mode: String,
        "The position to use when cropping, if no focal point specified."
        position: String,
        "The quality of the transform"
        quality: Int,
        "The handle of the named transform to use."
        transform: String,
        "Width for the generated transform"
        width: Int
    ): Int
}

input VariantInput {
    "Narrows the query results to only elements that have been archived."
    archived: Boolean
    "Narrows the query results based on the elements’ creation dates."
    dateCreated: [String]
    "Narrows the query results based on the elements’ last-updated dates."
    dateUpdated: [String]
    "The drafts’ creator ID"
    draftCreator: Int
    "The ID of the draft to return (from the `drafts` table)"
    draftId: Int
    "The source element ID that drafts should be returned for. Set to `false` to fetch unsaved drafts."
    draftOf: QueryArgument
    "Whether draft elements should be returned."
    drafts: Boolean
    "Narrows the query results based on whether the elements are enabled in the site they’re being queried in, per the `site` argument."
    enabledForSite: Boolean
    "Causes the query results to be returned in the order specified by the `id` argument."
    fixedOrder: Boolean
    "Narrows the query results based on whether the variant has sales applied."
    hasSales: Boolean
    "Narrows the query results based on whether the variant has stock available."
    hasStock: Boolean
    "Narrows the query results based on the variant’s height dimension."
    height: [QueryArgument]
    "Narrows the query results based on the elements’ IDs."
    id: [QueryArgument]
    "Causes the query results to be returned in reverse order."
    inReverse: Boolean
    "Narrows the query results based on the variants default status."
    isDefault: Boolean
    "Narrows the query results based on the variant’s length dimension."
    length: [QueryArgument]
    "Sets the limit for paginated results."
    limit: Int
    "Narrows the query results based on the variant’s maximum allowed quantity to be purchased."
    maxQty: [QueryArgument]
    "Narrows the query results based on the variant’s minimum allowed quantity to be purchased."
    minQty: [QueryArgument]
    "Sets the offset for paginated results."
    offset: Int
    "Sets the field the returned elements should be ordered by"
    orderBy: String
    "Narrows the query results based on variant price."
    price: [QueryArgument]
    "Narrows the query results based on the variant’s product ID."
    productId: [QueryArgument]
    "Narrows the query results based on a reference string."
    ref: [String]
    "Narrows the query results to elements that relate to *any* of the provided element IDs. This argument is ignored, if `relatedToAll` is also used."
    relatedTo: [Int]
    "Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored."
    relatedToAll: [Int]
    "The revisions’ creator ID"
    revisionCreator: Int
    "The ID of the revision to return (from the `revisions` table)"
    revisionId: Int
    "The source element ID that revisions should be returned for"
    revisionOf: QueryArgument
    "Whether revision elements should be returned."
    revisions: Boolean
    "Narrows the query results to only elements that match a search query."
    search: String
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    site: [String]
    "Determines which site(s) the elements should be queried in. Defaults to the current (requested) site."
    siteId: String
    "Narrows the query results based on the variant SKU."
    sku: [String]
    "Narrows the query results based on the elements’ slugs."
    slug: [String]
    "Narrows the query results based on the elements’ statuses."
    status: [String]
    "Narrows the query results based on variant stock level."
    stock: [QueryArgument]
    "Narrows the query results based on the elements’ titles."
    title: [String]
    "Narrows the query results to only elements that have been soft-deleted."
    trashed: Boolean
    "Narrows the query results based on the variant’s product’s type ID."
    typeId: [QueryArgument]
    "Narrows the query results based on the elements’ UIDs."
    uid: [String]
    "Determines whether only elements with unique IDs should be returned by the query."
    unique: Boolean
    "Narrows the query results based on the elements’ URIs."
    uri: [String]
    "Narrows the query results based on the variant’s weight dimension."
    weight: [QueryArgument]
    "Narrows the query results based on the variant’s width dimension."
    width: [QueryArgument]
}


"The `QueryArgument` scalar type represents a value to be using in Craft element queries. It can be an integer, a string, or a boolean value."
scalar QueryArgument

"The `DateTime` scalar type represents a point in time."
scalar DateTime

"The `Number` scalar type represents a number that can be a float, an integer or a null value."
scalar Number
